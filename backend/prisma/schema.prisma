// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String?
  name        String
  role        UserRole @default(USER)
  isVerified  Boolean  @default(false)
  mfaSecret   String?
  mfaEnabled  Boolean  @default(false)
  avatar      String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  sessions    Session[]
  otpTokens   OtpToken[]
  oauthAccounts OAuthAccount[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  refreshToken String   @unique
  userAgent    String?
  ipAddress    String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model OtpToken {
  id        String    @id @default(cuid())
  userId    String
  token     String
  type      OtpType
  expiresAt DateTime
  createdAt DateTime  @default(now())
  used      Boolean   @default(false)

  // Relations
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("otp_tokens")
}

model OAuthAccount {
  id            String   @id @default(cuid())
  userId        String
  provider      String
  providerId    String
  accessToken   String?
  refreshToken  String?
  expiresAt     DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@map("oauth_accounts")
}

enum UserRole {
  USER
  ADMIN
  MODERATOR
}

enum OtpType {
  SIGNUP
  PASSWORD_RESET
  EMAIL_VERIFICATION
  MFA_SETUP
}
