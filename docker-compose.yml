version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: enterprise-platform-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: enterprise_platform
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - enterprise-network

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: enterprise-platform-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - enterprise-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: enterprise-platform-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: mysql://app_user:app_password@mysql:3306/enterprise_platform
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: your-super-secret-refresh-jwt-key-change-this-in-production
      JWT_REFRESH_EXPIRES_IN: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-password
      EMAIL_FROM: noreply@enterprise-platform.com
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      GOOGLE_CALLBACK_URL: http://localhost:3000/api/v1/auth/oauth/google/callback
      FRONTEND_URL: http://localhost:3001
      API_PREFIX: api/v1
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - redis
    networks:
      - enterprise-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend Client (Next.js)
  frontend-client:
    build:
      context: ./frontend-client
      dockerfile: Dockerfile
    container_name: enterprise-platform-frontend-client
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - enterprise-platform-network

  # Frontend Admin (Next.js)
  frontend-admin:
    build:
      context: ./frontend-admin
      dockerfile: Dockerfile
    container_name: enterprise-platform-frontend-admin
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
    ports:
      - "3002:3000"
    depends_on:
      - backend
    networks:
      - enterprise-platform-network

volumes:
  mysql_data:
  redis_data:

networks:
  enterprise-network:
    driver: bridge
  enterprise-platform-network:
    driver: bridge
